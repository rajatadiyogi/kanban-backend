version: "3.9"
services:
  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - kanbanprox
    restart: always

  mysql-data:
    image: mysql:latest
    container_name: mysql-data
    ports:
      - "3306:3306"
    expose:
      - "3306"
    networks:
      - kanbanprox
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USERNAME: root
      MYSQL_PASSWORD: root
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"

  mongo-data:
    image: mongo:latest
    container_name: mongo-data
    networks:
      - kanbanprox
    ports:
      - "27017:27017"

  eureka-server:
    container_name: eureka-server
    image: eureka:v1.5.5
    build: eureka/
    ports:
      - "8761:8761"
    networks:
      - kanbanprox
    restart: always

  api-gateway:
    container_name: api-gateway
    build: ApiGateway/
    ports:
      - "9500:9500"
    networks:
      - kanbanprox
    depends_on:
      - eureka-server

  kanban-project:
    container_name: kanban-project
    build: kanbanProject/
    ports:
      - "8082:8082"
    networks:
      - kanbanprox
    depends_on:
      - mongo-data
      - api-gateway
      - eureka-server
#      - rabbitmq

  kanban-user:
    container_name: kanban-user
    build: kanbanUser/
    ports:
      - "8083:8083"
    networks:
      - kanbanprox
    depends_on:
      - mongo-data
      - api-gateway
      - eureka-server

  notification-service:
    container_name: notification-service
    build: NotificationService/
    ports:
      - "8084:8084"
    networks:
      - kanbanprox
    environment:
      SPRING_RABBITMQ_HOST: rabbitmq-container
    depends_on:
#      - mongo-data
#      - rabbitmq
      - api-gateway
      - eureka-server

  user-auth:
    container_name: user-auth
    build: UserAuthentication/
    ports:
      - "8081:8081"
    networks:
      - kanbanprox
    depends_on:
      - mysql-data
      - api-gateway
      - eureka-server

networks:
  kanbanprox:
    driver: bridge